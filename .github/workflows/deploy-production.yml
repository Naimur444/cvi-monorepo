name: Deploy CVI Public to Contabo (Production)

on:
  push:
    branches:
      - prod
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Deploy via SSH
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.CONTABO_SSH_HOST }}
        username: ${{ secrets.CONTABO_SSH_USER }}
        password: ${{ secrets.CONTABO_SSH_PASS }}
        port: 22
        debug: true
        timeout: 120s
        command_timeout: 30m
        script: |
          NODE_CMD="node"
          NPM_CMD="npm"
          
          # Check if Node.js is available
          if ! $NODE_CMD -v > /dev/null 2>&1; then
              echo "Error: Node.js is not available"
              exit 1
          fi

          # Navigate directly to existing www directory
          cd $HOME/www || exit 1
          
          # Navigate to cloudvortexinnovation.com directory
          cd cloudvortexinnovation.com || exit 1
          
          # Show current directory and contents
          echo "Current directory: $(pwd)"
          echo "Current directory contents:"
          ls -la

          # Checking Node.js installation
          echo "Checking Node.js installation..."
          $NODE_CMD -v || exit 1
          $NPM_CMD -v || exit 1

          # Delete old files - remove everything except root-owned directories
          echo "Cleaning up old files..."
          
          # Remove user-owned files and directories
          find . -maxdepth 1 -user $(whoami) -exec rm -rf {} + 2>/dev/null || true
          
          # Remove remaining files we can access
          rm -rf .git 2>/dev/null || true
          for item in *; do
            if [ -e "$item" ] && [ -w "$item" ]; then
              rm -rf "$item" 2>/dev/null || true
            fi
          done
          
          # Remove hidden files we can access
          for item in .[^.]*; do
            if [ -e "$item" ] && [ -w "$item" ]; then
              rm -rf "$item" 2>/dev/null || true
            fi
          done
          
          echo "Directory contents after cleanup:"
          ls -la

          # Clone the repository
          echo "Cloning repository..."
          git clone https://${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/${{ github.repository }}.git .
          git checkout prod

          # Verify package.json presence
          if [ ! -f "package.json" ]; then
              echo "Error: package.json not found in the deployment directory."
              exit 1
          fi

          # Configure environment variables
          if [ -f ".env.local" ]; then
            cp .env.local .env.local.backup || true
          else
            echo "Creating production environment file..."
            touch .env.local
          fi

          # Update .env.local for production
          echo "NEXT_PUBLIC_API_URL=https://api.cloudvortexinnovation.com" > .env.local
          echo "NEXT_PUBLIC_SITE_URL=https://cloudvortexinnovation.com" >> .env.local
          echo "NODE_ENV=production" >> .env.local

          # Install Node.js dependencies
          echo "Installing Node.js dependencies..."
          $NPM_CMD ci || exit 1
          
          echo "Building Next.js application..."
          $NPM_CMD run build || exit 1

          # Set proper permissions
          find . -type f -exec chmod 644 {} \;
          find . -type d -exec chmod 755 {} \;
          chmod -R 755 .next
          chmod -R 755 public
          chmod 644 .env.local

          # Install PM2 globally if not present
          if ! command -v pm2 &> /dev/null; then
              echo "Installing PM2..."
              $NPM_CMD install -g pm2 || exit 1
          fi

          # Create PM2 ecosystem file
          cat > ecosystem.config.js << EOF
          module.exports = {
            apps: [{
              name: 'cvi-public',
              script: 'npm',
              args: 'start',
              cwd: '$HOME/www/cloudvortexinnovation.com',
              instances: 1,
              autorestart: true,
              watch: false,
              max_memory_restart: '1G',
              env: {
                NODE_ENV: 'production',
                PORT: 3000
              }
            }]
          };
          EOF

          # Stop existing PM2 process if running
          pm2 stop cvi-public || true
          pm2 delete cvi-public || true

          # Start the application with PM2
          pm2 start ecosystem.config.js
          pm2 save
          pm2 startup || true

          echo "Production deployment completed successfully!"
          echo "Production site: https://cloudvortexinnovation.com"
          echo "PM2 status:"
          pm2 status